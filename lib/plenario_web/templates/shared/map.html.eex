<div id="<%= @map_id %>" style="height:<%= @map_height %>px"></div>


<script defer>
var map = L.map('<%= @map_id %>').setView(<%= @map_center %>, <%= @map_zoom %>);

L.tileLayer(
  'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',
  {
    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox.streets',
    accessToken: 'pk.eyJ1IjoicGxlbmFyaW8iLCJhIjoiY2pkM2RicXV4M2d3ajJybnNvczE0NDBnbiJ9.QYYTdm03c_iSP1pHRS6QUw'
  }
).addTo(map);

<%= if @draw_controls do %>
var drawnItems = new L.FeatureGroup();
map.addLayer(drawnItems);

var drawControl = new L.Control.Draw({
  edit: {
    featureGroup: drawnItems
  },
  draw: {
    circle: false,
    marker: false,
    circlemarker: false
  }
});
map.addControl(drawControl);

var coordInput = document.getElementById('<%= @form_input_coords %>');
var ciVal = coordInput.value;
if (!ciVal.match(/^\[\[.*\]\]/)) {
  coordInput.value = JSON.stringify(map.getBounds());
}

map.on('draw:created', function(e) {
  var latLongs = e.layer.getLatLngs();
  latLongs = latLongs[0];
  var coords = [];
  for (var i = 0; i < latLongs.length; i++) {
    var el = latLongs[i];
    coords.push([
      el.lat,
      el.lng
    ]);
  }
  var coordInput = document.getElementById('<%= @form_input_coords %>');
  coordInput.value = JSON.stringify(coords);

  drawnItems.addLayer(e.layer);
});

map.on('draw:deleted', function(e) {
  var coordInput = document.getElementById('<%= @form_input_coords %>');
  coordInput.value = '';

  drawnItems.clearLayers(e.layer);
});

map.on('moveend', function(e) {
  var coordInput = document.getElementById('<%= @form_input_coords %>');
  var ciVal = coordInput.value;
  if (!ciVal.match(/^\[\[.*\]\]/)) {
    coordInput.value = JSON.stringify(map.getBounds());
  }
});
<% end %>

<%= if @bbox do %>
L.polygon(<%= @bbox %>).addTo(map);
<% end %>

<%= if @points do %>
var icon = L.icon({
  iconUrl: '/images/marker-icon.png',
  shadowUrl: '/images/marker-shadow.png'
});
<%= for pt <- @points do %>
L.marker(<%= pt %>, {icon: icon}).addTo(map);
<% end %>
<% end %>
</script>
