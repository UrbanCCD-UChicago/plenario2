-- Template Variables
-- ==================
-- rows             list[string]
-- columns          list[string]
-- table            string
-- constraints      list[string]


<% last_index = Enum.count(rows) - 1 %>


INSERT INTO 
  "<%= table %>" AS t ("<%= Enum.join(columns, ~s{", "}) %>")
VALUES
  <%= for {row, index} <- Enum.with_index(rows) do %>
    <% fmtrow = Enum.map(row, &PlenarioEtl.Rows.escape/1) %>
    (<%= Enum.join(fmtrow, ", ") %>) <%= if index != last_index do %>,<% end %>
  <% end %>
ON CONFLICT ("<%= Enum.join(constraints, ~s{","}) %>")
  DO UPDATE SET
  <%= for {column, index} <- columns
    |> Enum.with_index 
    |> Enum.reverse do %>
    <%= case index do %>
      <% 0 -> %> "<%= column %>" = excluded."<%= column %>"
      <% _ -> %> "<%= column %>" = excluded."<%= column %>",
    <% end %>
  <% end %>
  WHERE
  <%= for {constraint, index} <- Enum.with_index(constraints) do %>
    t."<%= constraint %>" = excluded."<%= constraint %>" 
    <%= if index != Enum.count(constraints) - 1 do %>,<% end %>
  <% end %>
  RETURNING 
    t."<%= Enum.join(columns, ~s{", t."}) %>"
